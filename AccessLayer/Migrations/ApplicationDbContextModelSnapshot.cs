// <auto-generated />
using System;
using AccessLayer.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AccessLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ModelsLayer.Entities.AppCheckHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ExecuteTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsUp")
                        .HasColumnType("bit");

                    b.Property<int>("TargetApplication_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TargetApplication_Id");

                    b.ToTable("AppCheckHistories");
                });

            modelBuilder.Entity("ModelsLayer.Entities.SystemUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Phone_Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("SystemUsers");
                });

            modelBuilder.Entity("ModelsLayer.Entities.TargetApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Interval")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(5);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("LastCheckIsUp")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SystemUser_Id")
                        .HasColumnType("int");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SystemUser_Id");

                    b.ToTable("TargetApplications");
                });

            modelBuilder.Entity("ModelsLayer.Entities.AppCheckHistory", b =>
                {
                    b.HasOne("ModelsLayer.Entities.TargetApplication", "TargetApplication")
                        .WithMany("AppCheckHistories")
                        .HasForeignKey("TargetApplication_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TargetApplication");
                });

            modelBuilder.Entity("ModelsLayer.Entities.TargetApplication", b =>
                {
                    b.HasOne("ModelsLayer.Entities.SystemUser", "SystemUser")
                        .WithMany("TargetApplications")
                        .HasForeignKey("SystemUser_Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SystemUser");
                });

            modelBuilder.Entity("ModelsLayer.Entities.SystemUser", b =>
                {
                    b.Navigation("TargetApplications");
                });

            modelBuilder.Entity("ModelsLayer.Entities.TargetApplication", b =>
                {
                    b.Navigation("AppCheckHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
